type Query {
  searchOnCategory(
    page: Int!
    limit: Int!
    search: String!
    Category: Int!
  ): CarPartsConnection
  categoryList: [Category]
  search(page: Int!, limit: Int!, search: String!): CarPartsConnection
  getByCategory(category: Int!, page: Int!, limit: Int!): CarPartsConnection
}
type Mutation {
  updatePriceHistory(percentage: Int): [CarParts]
}
scalar JSON
type CarParts {
  CustomLabel: String
  Category: String
  Title: String
  Hersteller: String
  Modell: String
  PicURL: String
  Price: Int
  Quantity: Int
  OEMR: String
  OER: String
  generic_attributes: JSON
  price_history: priceHistory
}
type Category {
  Category: Int
  _count: JSON
}

input SearchQuery {
  search: String
  page: Int!
  take: Int!
}
input findByCategory {
  category: Int!
  skip: Int
  take: Int
}
type priceHistory {
  product_id: Int
  price: Int
  effective_date: String
  is_active: Boolean
  product: CarParts
}
type PageInfo {
  totalDocs: Int!
  limit: Int!
  page: Int!
  nextPage: JSON
  prevPage: JSON
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  totalPages: Int!
  pagingCounter: Int!
}
type CarPartsConnection {
  pageInfo: PageInfo!
  docs: [CarParts!]!
}
